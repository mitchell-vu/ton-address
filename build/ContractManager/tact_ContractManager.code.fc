#pragma version =0.4.4;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "tact_ContractManager.headers.fc";
#include "tact_ContractManager.stdlib.fc";
#include "tact_ContractManager.storage.fc";

;;
;; Contract ContractManager functions
;;

(int, slice) $ContractManager$_contract_init(slice $owner, int $seqno) impure inline_ref {
    var (($self'seqno, $self'owner)) = (null(), null());
    $self'owner = $owner;
    $self'seqno = $seqno;
    return ($self'seqno, $self'owner);
}

((int, slice), slice) $ContractManager$_fun_balance((int, slice) $self) impure inline_ref {
    var (($self'seqno, $self'owner)) = $self;
    return (($self'seqno, $self'owner), $Int$_fun_toCoinsString(__tact_my_balance()));
}

((int, slice), (cell, cell)) $ContractManager$_fun_getJettonWalletInit((int, slice) $self, slice $address) impure inline_ref {
    var (($self'seqno, $self'owner)) = $self;
    return (($self'seqno, $self'owner), $JettonDefaultWallet$_init_child(__tact_context_sys, $address, my_address()));
}

((int, slice), ()) $ContractManager$_fun_transferCoin((int, slice) $self, slice $to, int $amount, slice $response_destination) impure inline_ref {
    var (($self'seqno, $self'owner)) = $self;
    var ($winit'code, $winit'data) = ($self'seqno, $self'owner)~$ContractManager$_fun_getJettonWalletInit($to);
    $global_send($SendParameters$_constructor_to_value_bounce_mode_body_code_data($global_contractAddress(($winit'code, $winit'data)), 0, true, (64 + 2), $TokenTransferInternal$_store_cell($TokenTransferInternal$_constructor_query_id_amount_from_response_destination_forward_ton_amount_forward_payload(0, $amount, my_address(), $response_destination, 0, $Cell$_fun_asSlice(end_cell(begin_cell())))), $winit'code, $winit'data));
    return (($self'seqno, $self'owner), ());
}

((int, slice), ()) $ContractManager$_fun_requireSenderAsWalletOwner((int, slice) $self, slice $owner) impure inline_ref {
    var (($self'seqno, $self'owner)) = $self;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    var ($winit'code, $winit'data) = ($self'seqno, $self'owner)~$ContractManager$_fun_getJettonWalletInit($owner);
    throw_unless(4429, ( __tact_slice_eq_bits($ctx'sender, $global_contractAddress(($winit'code, $winit'data))) ));
    return (($self'seqno, $self'owner), ());
}

((int, slice), (slice, cell)) $ContractManager$_fun_get_jetton_data((int, slice) $self) impure inline_ref {
    var (($self'seqno, $self'owner)) = $self;
    return (($self'seqno, $self'owner), $JettonData$_constructor_owner_wallet_code($self'owner, $StateInit$_get_code($JettonDefaultWallet$_init_child(__tact_context_sys, $self'owner, my_address()))));
}

((int, slice), slice) $ContractManager$_fun_get_wallet_address((int, slice) $self, slice $owner) impure inline_ref {
    var (($self'seqno, $self'owner)) = $self;
    return (($self'seqno, $self'owner), $global_contractAddress($JettonDefaultWallet$_init_child(__tact_context_sys, $owner, my_address())));
}

((int, slice), slice) $ContractManager$_fun_owner((int, slice) $self) impure inline_ref {
    var (($self'seqno, $self'owner)) = $self;
    return (($self'seqno, $self'owner), $self'owner);
}

;;
;; Receivers of a Contract ContractManager
;;

(((int, slice)), ()) %$ContractManager$_internal_empty((int, slice) $self) impure inline {
    var ($self'seqno, $self'owner) = $self;
    __tact_nop();
    return (($self'seqno, $self'owner), ());
}

(((int, slice)), ()) $ContractManager$_internal_binary_TransferWallet((int, slice) $self, (int, slice) $msg) impure inline {
    var ($self'seqno, $self'owner) = $self;
    var ($msg'amount, $msg'receiver) = $msg;
    var ($ctx'bounced, $ctx'sender, $ctx'value, $ctx'raw) = __tact_context_get();
    throw_unless(14534, ( __tact_slice_eq_bits($self'owner, $ctx'sender) ));
    throw_unless(55916, ( ((~ null?($msg'receiver))) ? (($msg'amount > 0)) : (false) ));
    ($self'seqno, $self'owner)~$ContractManager$_fun_transferCoin($msg'receiver, $msg'amount, $self'owner);
    return (($self'seqno, $self'owner), ());
}

(((int, slice)), ()) $ContractManager$_internal_binary_TokenBurnNotification((int, slice) $self, (int, int, slice, slice) $msg) impure inline {
    var ($self'seqno, $self'owner) = $self;
    var ($msg'query_id, $msg'amount, $msg'sender, $msg'response_destination) = $msg;
    ($self'seqno, $self'owner)~$ContractManager$_fun_requireSenderAsWalletOwner(__tact_not_null($msg'response_destination));
    if ((~ null?($msg'response_destination))) {
        $global_send($SendParameters$_constructor_to_value_bounce_mode_body(__tact_not_null($msg'response_destination), 0, false, 64, $TokenExcesses$_store_cell($TokenExcesses$_constructor_query_id($msg'query_id))));
    }
    return (($self'seqno, $self'owner), ());
}

(((int, slice)), ()) $ContractManager$_internal_binary_ProvideWalletAddress((int, slice) $self, (int, slice, int) $msg) impure inline {
    var ($self'seqno, $self'owner) = $self;
    var ($msg'query_id, $msg'owner_address, $msg'include_address) = $msg;
    throw_unless(23951, ($Context$_get_value(__tact_context_get()) >= 6100000));
    var ($init'code, $init'data) = $JettonDefaultWallet$_init_child(__tact_context_sys, $msg'owner_address, my_address());
    if ($msg'include_address) {
        $global_send($SendParameters$_constructor_to_value_mode_body(__tact_context_get_sender(), 0, 64, $TakeWalletAddress$_store_cell($TakeWalletAddress$_constructor_query_id_wallet_address_owner_address($msg'query_id, $global_contractAddress(($init'code, $init'data)), $Cell$_fun_asSlice(end_cell(__tact_store_address(__tact_store_bool(begin_cell(), true), $msg'owner_address)))))));
    } else {
        $global_send($SendParameters$_constructor_to_value_mode_body(__tact_context_get_sender(), 0, 64, $TakeWalletAddress$_store_cell($TakeWalletAddress$_constructor_query_id_wallet_address_owner_address($msg'query_id, $global_contractAddress(($init'code, $init'data)), $Cell$_fun_asSlice(end_cell(__tact_store_bool(begin_cell(), false)))))));
    }
    return (($self'seqno, $self'owner), ());
}

(((int, slice)), ()) $ContractManager$_internal_binary_Deploy((int, slice) $self, (int) $deploy) impure inline {
    var ($self'seqno, $self'owner) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'seqno, $self'owner)~$ContractManager$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'seqno, $self'owner), ());
}

;;
;; Get methods of a Contract ContractManager
;;

_ %balance() method_id(104128) {
    var self = $ContractManager$_contract_load();
    var res = self~$ContractManager$_fun_balance();
    return res;
}

_ %get_jetton_data() method_id(106029) {
    var self = $ContractManager$_contract_load();
    var res = self~$ContractManager$_fun_get_jetton_data();
    return $JettonData$_to_external(res);
}

_ %get_wallet_address(slice $$owner) method_id(103289) {
    slice $owner = __tact_verify_address($$owner);
    var self = $ContractManager$_contract_load();
    var res = self~$ContractManager$_fun_get_wallet_address($owner);
    return res;
}

_ %owner() method_id(83229) {
    var self = $ContractManager$_contract_load();
    var res = self~$ContractManager$_fun_owner();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128,
        "org.ton.jetton.master"H >> 128,
        "org.ton.ownable"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://Qmet6TpGqUbWr1oDWjMyRvTDHRERP9Kdjt4fAXSpqqBz7h";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract ContractManager
;;

((int, slice), int) $ContractManager$_contract_router_internal((int, slice) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive empty message
    if ((op == 0) & (slice_bits(in_msg) <= 32)) {
        self~%$ContractManager$_internal_empty();
        return (self, true);
    }
    
    ;; Receive TransferWallet message
    if (op == 196377711) {
        var msg = in_msg~$TransferWallet$_load();
        self~$ContractManager$_internal_binary_TransferWallet(msg);
        return (self, true);
    }
    
    ;; Receive TokenBurnNotification message
    if (op == 2078119902) {
        var msg = in_msg~$TokenBurnNotification$_load();
        self~$ContractManager$_internal_binary_TokenBurnNotification(msg);
        return (self, true);
    }
    
    ;; Receive ProvideWalletAddress message
    if (op == 745978227) {
        var msg = in_msg~$ProvideWalletAddress$_load();
        self~$ContractManager$_internal_binary_ProvideWalletAddress(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$ContractManager$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $ContractManager$_contract_load();
    
    ;; Handle operation
    int handled = self~$ContractManager$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $ContractManager$_contract_store(self);
}
